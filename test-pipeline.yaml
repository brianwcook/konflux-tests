kind: Pipeline
apiVersion: tekton.dev/v1beta1
metadata:
  name: example-pipeline
spec:
  params:
    - description: 'Snapshot of the application'
      name: SNAPSHOT
      default: '{"components": [{"name":"test-app", "containerImage": "quay.io/example/repo:latest"}]}'
      type: string
    - description: 'Namespace where the application is running'
      name: NAMESPACE
      default: "default"
      type: string
    - description: 'Expected output'
      name: EXPECTED_OUTPUT
      default: "Hello World!"
      type: string
  tasks:
    - name: task-1
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)
        - name: PLATFORM
          value: linux/arm64
      taskSpec:
        volumes:
        - name: ssh
          secret:
            optional: false
            secretName: multi-platform-ssh-$(context.taskRun.name)
        - emptyDir: {}
          name: workspace
        params:
        - name: SNAPSHOT
        results:
        - name: TEST_OUTPUT
          description: Test output
        steps:
        - name: run-test
          image: quay.io/bcook/jq-ubi9:latest
          env:
          - name: SNAPSHOT
            value: $(params.SNAPSHOT)
          script: | 
            echo "Snapshot:\n"
            echo ${SNAPSHOT} | jq "."
            echo "1 - works:"
            echo ${SNAPSHOT} | jq ".components"
            
            echo extracting image pullspec...
            IMAGE=$(echo ${SNAPSHOT} | jq ".components[] | select(.name==\"arm64-test-demo\")"| jq .containerImage | tr -d '"')
            echo IMAGE SPEC: $IMAGE
            
            # Run custom tests for the given Snapshot here
            # After the tests finish, record the overall result in the RESULT variable
            
            echo running test
            if podman run --rm --entrypoint="/hello-world.sh" $IMAGE | grep -Fxq 'Hello World!'; then
              RESULT="SUCCESS"
              SUCCESSES=1
              FAILURES=0
              echo $RESULT
            else
              RESULT="FAILURE"
              SUCCESSES=0
              FAILURES=1
              echo $RESULT
            fi

            # Output the standardized TEST_OUTPUT result in JSON form
            TEST_OUTPUT=$(jq -rc --arg date $(date +%s) --arg RESULT "${RESULT}" --null-input \
              '{result: $RESULT, timestamp: $date, failures: ${FAILURES}, successes: ${FAILURES}, warnings: 0}')
            echo -n "${TEST_OUTPUT}" | tee $(results.TEST_OUTPUT.path)
          securityContext:
            runAsUser: 0
            capabilities:
              add:
              - SETFCAP
          volumeMounts:
          - mountPath: /ssh
            name: ssh
          - mountPath: /workspace
            name: workspace
            readOnly: true
